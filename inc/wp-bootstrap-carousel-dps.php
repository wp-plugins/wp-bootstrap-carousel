<?php

/**
 * WP_Bootstrap_Carousel_DPS class
 *
 * This class is an addon that optionally transforms post listings generated by Bill Erickson's
 * "Display Posts Shortcode" plugin in a Bootstrap Carousel slideshow.
 *
 * @author Peter J. Herrel  (email : peterherrel [at] gmail.com)
 * @link http://peterherrel.com/wordpress/plugins/wp-bootstrap-carousel
 *
 * To download the "Display Posts Shortcode" plugin, visit:
 * http://wordpress.org/extend/plugins/display-posts-shortcode/
 * Note: make sure you download version 2.2.1 or higher
 *
 * For more info on how to customize the output of the shortcode, visit:
 * https://github.com/billerickson/display-posts-shortcode/wiki
 */
 
/**
 * LICENSE
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 3, as 
 * published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

if( ! defined( 'ABSPATH' ) ) exit;

if( ! class_exists( 'WP_Bootstrap_Carousel_DPS' ) ) {

/**
 * WP_Bootstrap_Carousel_DPS class
 */
class WP_Bootstrap_Carousel_DPS
{
    public function __construct()
    {
        if( ! is_admin() || defined( 'DOING_AJAX' ) )
            add_action( 'init', array( $this, 'init' ) );
    }
    public function init()
    {
        if( is_feed() )
            return;

        add_filter( 'display_posts_shortcode_args',             array( $this, 'display_posts_shortcode_args' ),             10, 2 );
        add_filter( 'display_posts_shortcode_wrapper_open',     array( $this, 'display_posts_shortcode_wrapper_open' ),     11, 2 );
        add_filter( 'display_posts_shortcode_output',           array( $this, 'display_posts_shortcode_output' ),           12, 9 );
        add_filter( 'display_posts_shortcode_wrapper_close',    array( $this, 'display_posts_shortcode_wrapper_close' ),    13, 2 );
    }
    public function display_posts_shortcode_args( $args, $original_atts )
    {
        if( ! $this->is_bootstrap( $original_atts ) )
            return $args;

        global $wp_bc_found_posts;
        $wp_bc_found_posts = 0;

        if( isset( $original_atts['post_type'] ) && 'attachment' == $original_atts['post_type'] )
            $args['post_status'] = 'inherit';

        $listing = new WP_Query( $args );
        if ( $listing->have_posts() )
            $wp_bc_found_posts = $listing->found_posts;
        wp_reset_postdata();

        return $args;
    }
    public function display_posts_shortcode_output( $output, $original_atts, $image, $title, $date, $excerpt, $inner_wrapper, $content, $class )
    {
        if( ! $this->is_bootstrap( $original_atts ) )
            return $output;

        global $post;

        $post_type = $post->post_type;

        if( ! ( post_type_supports( $post_type, 'thumbnail' ) || 'attachment' == $post_type ) )
            return;

        $thickbox       = ( isset( $original_atts['thickbox'] ) ? wp_bc_bool( $original_atts['thickbox'] ) : 0 );
        $unwrap         = ( isset( $original_atts['unwrap'] ) ? wp_bc_bool( $original_atts['unwrap'] ) : 0 );

        $image_size     = ( isset( $original_atts['image_size'] ) ? sanitize_text_field( $original_atts['image_size'] ) : 'large' );
        $cropped        = ( 'attachment' == $post_type ) ? wp_get_attachment_image_src( $post->ID, $image_size ) : wp_get_attachment_image_src( get_post_thumbnail_id( $post->ID ), $image_size );
        $full           = ( 'attachment' == $post_type ) ? wp_get_attachment_image_src( $post->ID, 'full' ) : wp_get_attachment_image_src( get_post_thumbnail_id( $post->ID ), 'full' );
        $href           = ( $thickbox ) ? $full[0] : get_permalink( $post->ID );

        $inner_wrapper  = 'div';
        $image          = '<a class="image' . ( ( $thickbox ) ? " thickbox" : "" ) . '" href="' . $href . '"><img src="' . $cropped[0] . '" alt=""' . ( ( $unwrap ) ? " data-wpbc_unwrap='1'" : "" ) . ' /></a>';
        $title          = '<a class="title' . ( ( $thickbox ) ? " thickbox" : "" ) . '" href="' . $href . '">' . get_the_title() . '</a>';

        $output = '';
        $output .= '<' . $inner_wrapper . ' class="' . implode( ' ', $class ) . ' item active">';
        $output .= $image;

        $showexcerpt = $excerpt ? '<p>' . apply_filters( 'wp_bootstrap_carousel_dps_the_excerpt', $excerpt ) . '</p>' : '';
        $showcontent = $content ? apply_filters( 'wp_bootstrap_carousel_dps_the_content', $content ) : '';

        $output .= apply_filters(
            'wp_bootstrap_carousel_dps_caption',
            '<div class="carousel-caption"><h3 class="carousel-post-title">' . $title . '</h3>' . $showexcerpt . $showcontent . '</div><!-- .carousel-caption -->',
            $original_atts, $title, $date, $excerpt, $content, $post
        );

        $output .= '</' . $inner_wrapper . '><!-- .item -->';

        return $output;
    }
    public function display_posts_shortcode_wrapper_open( $output, $original_atts )
    {
        if( ! $this->is_bootstrap( $original_atts ) )
            return $output;

        global $content_width, $wp_bootstrap_carousel, $wp_bc_found_posts;

        $max_width  = ( isset( $original_atts['width'] ) )      ? intval( str_replace( array( '%', 'px' ), '', trim( $original_atts['width'] ) ) ) : ( isset( $content_width ) ? $content_width : '' );
        $max_width  = ( ! empty( $max_width ) )                 ? "max-width:{$max_width}px;" : '';
        $controls   = ( isset( $original_atts['controls'] )     ? wp_bc_bool( $original_atts['controls'] ) : 1 );
        $slide      = ( isset( $original_atts['slide'] )        ? wp_bc_bool( $original_atts['slide'] ) : 1 );
        $interval   = ( isset( $original_atts['interval'] )     ? intval( $original_atts['interval'] ) : 5000 );
        $pause      = ( isset( $original_atts['pause'] )        ? sanitize_text_field( $original_atts['pause'] ) : 'hover' );
        $wrap       = ( isset( $original_atts['wrap'] )         ? wp_bc_bool( $original_atts['wrap'] ) : 1 );
        $thickbox   = ( isset( $original_atts['thickbox'] )     ? wp_bc_bool( $original_atts['thickbox'] ) : 0 );

        static $it = 1;
        $it++;

        $output = '';
        $output .= $wp_bootstrap_carousel->enqueue( $thickbox );

        $output .= '<div style="width:100%;' . $max_width . '" id="wp-bootstrap-carousel-dps-' . $it . '" class="carousel carousel-dps' . ( ( $slide ) ? " slide" : "" ) . '" data-interval="' . $interval . '" data-pause="' . $pause . '" data-wrap="' . $wrap . '">';

        /**
         * INDICATORS
         */
        if( $controls )
        {
            $output .= '<ol class="carousel-indicators">';

            for ( $i = 0; $i < $wp_bc_found_posts; $i++ )
                $output .= '<li data-target="#wp-bootstrap-carousel-dps-' . $it . '" data-slide-to="' . $i . '" class="' . ( ( $i == 0 ) ? "active" : "" ) . '"></li>';

            $output .= '</ol>';
        }

        $output .= '<div class="carousel-inner carousel-inner-dps">';

        return $output;
    }
    public function display_posts_shortcode_wrapper_close( $output, $original_atts )
    {
        if( ! $this->is_bootstrap( $original_atts ) )
            return $output;

        static $it = 1;
        $it++;

        $controls = ( isset( $original_atts['controls'] ) ? wp_bc_bool( $original_atts['controls'] ) : 1 );

        $output = '';
        $output .= '</div><!-- .carousel-inner -->';

        if( $controls )
            $output .= '<a class="carousel-control carousel-control-dps left" role="button" data-slide="prev" href="#wp-bootstrap-carousel-dps-' . $it . '"><span class="icon-prev"></span></a>
            <a class="carousel-control carousel-control-dps right" role="button" data-slide="next" href="#wp-bootstrap-carousel-dps-' . $it . '"><span class="icon-next"></span></a>';

        $output .= '</div><!-- .carousel -->';

        return $output;
    }
    private function is_bootstrap( $original_atts )
    {
        if( isset( $original_atts['bootstrap'] ) && false !== wp_bc_bool( $original_atts['bootstrap'] ) )
            return true;

        return false;
    }
} // class

} // class_exists check
